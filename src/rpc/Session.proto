syntax = "proto3";
package gestalt.rpc;

import "google/protobuf/empty.proto";


service Session {
    /**
     * Connect this client to server
     *
     * __Steps - client__
     * 1. initiate call
     * 2. initiate rdma_connect()
     * 3. wait for server return MR
     * 4. finish
     *
     * __Steps - server__
     * 1. triggered, entering handler
     * 2. rdma_get_request() and rdma_accept()
     * 3. register PMem space to accepted endpoint
     * 4. write MR to stream
     * 5. add connected client property to server runtime
     *
     * @param ctx->peer() client identifier
     * @return addr, length, rkey - RDPMA fields
     * @throw ALREADY_EXISTS
     */
    rpc Connect(ClientProp) returns (stream MemoryRegion) {}

    /**
     * Disconnect this client from server
     * @param ctx->peer() client identifier
     */
    rpc Disconnect(ClientProp) returns (google.protobuf.Empty) {}
}


message ClientProp {
    /** client unique ID */
    uint32 id = 1;
    /**
     * name of the bucket that this client connection intends to use
     * @note we don't support bucket interface for now, one bucket is sufficient
     * for running performance benchmarks
     */
    //string using = 2;
}

/** required fields operating RDMA memory region */
message MemoryRegion {
    uint64 addr = 1;
    uint64 length = 2;
    uint32 rkey = 3;
}
